$date
	Mon Sep  1 03:06:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module four_bit_tb $end
$var wire 4 ! sum_t [3:0] $end
$var wire 1 " cout_t $end
$var reg 4 # a_t [3:0] $end
$var reg 4 $ b_t [3:0] $end
$var reg 1 % cin_t $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " cout $end
$var wire 1 ) c3 $end
$var wire 1 * c2 $end
$var wire 1 + c1 $end
$scope module fa0 $end
$var wire 1 , a $end
$var wire 1 - ab $end
$var wire 1 . ac $end
$var wire 1 / b $end
$var wire 1 0 bc $end
$var wire 1 % c $end
$var wire 1 + carry $end
$var wire 1 1 sum $end
$var wire 1 2 temp_sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 3 a $end
$var wire 1 4 ab $end
$var wire 1 5 ac $end
$var wire 1 6 b $end
$var wire 1 7 bc $end
$var wire 1 + c $end
$var wire 1 * carry $end
$var wire 1 8 sum $end
$var wire 1 9 temp_sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 : a $end
$var wire 1 ; ab $end
$var wire 1 < ac $end
$var wire 1 = b $end
$var wire 1 > bc $end
$var wire 1 * c $end
$var wire 1 ) carry $end
$var wire 1 ? sum $end
$var wire 1 @ temp_sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 A a $end
$var wire 1 B ab $end
$var wire 1 C ac $end
$var wire 1 D b $end
$var wire 1 E bc $end
$var wire 1 ) c $end
$var wire 1 " carry $end
$var wire 1 F sum $end
$var wire 1 G temp_sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#10000
1F
1)
1<
1*
17
1+
b1000 !
b1000 (
0?
19
1-
1@
1/
16
1,
1:
b11 $
b11 '
b101 #
b101 &
#20000
b0 !
b0 (
0F
1"
07
15
1G
1C
06
13
1A
b1 $
b1 '
b1111 #
b1111 &
#30000
05
0+
09
14
07
1>
0-
0<
b1 !
b1 (
11
0/
16
1=
0,
0:
1%
b110 $
b110 '
b1010 #
b1010 &
#40000
